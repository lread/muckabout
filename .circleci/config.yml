version: 2.1

orbs:
  gh: circleci/github-cli@2.1.0

aliases:
  - &docker
    - image: cimg/clojure:1.11.1-openjdk-8.0

  - &environment
    LEIN_ROOT: "true"
    JVM_OPTS: -Xmx3200m

  - &restore_clojure_cache
    restore_cache:
      name: Restore clojure cache
      keys:
        - v1-dependencies-{{ checksum "project.clj" }}
        - v1-dependencies-

  - &clojure_deps_install
    run:
      name: "Bring down Clojure deps"
      command: lein deps

  - &report_tools_versions
    run:
      name: "Tools versions"
      command: |
        java -version
        clojure --version
        bb --version

  - &save_clojure_cache
    save_cache:
      name: Save clojure cache
      key: v1-dependencies-{{ checksum "project.clj" }}
      paths:
        - ~/.m2

workflows:
  version: 2
  build_deploy:
    jobs:
      - test:
          filters:  # required since `deploy` has tag filters AND requires `test`
            tags:
              only: /.*/
      - deploy:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d.*/

jobs:
  test:
    docker: *docker
    environment: *environment
    steps:
      - checkout
      - *restore_clojure_cache
      - *clojure_deps_install
      - *report_tools_versions
      - run:
          name: Ensure No Reflection Warnings
          command: "! lein check 2>&1 | grep 'Reflection warning'"
      - run:
          name: Run tests
          command: lein do clean, test
      - *save_clojure_cache

  deploy:
    docker: *docker
    environment: *environment
    steps:
      - checkout
      - *restore_clojure_cache
      - *report_tools_versions
      - gh/setup
      - run:
          name: Install deployment-script
          command: |
            curl -s https://raw.githubusercontent.com/clj-commons/infra/main/deployment/circle-maybe-deploy.bb -o circle-maybe-deploy.bb
            chmod a+x circle-maybe-deploy.bb
      - run:
          name: Setup GPG signing key
          command: |
            GNUPGHOME="$HOME/.gnupg"
            export GNUPGHOME
            mkdir -p "$GNUPGHOME"
            chmod 0700 "$GNUPGHOME"
            echo "no-tty" >> "$GNUPGHOME"/gpg.conf
            echo "batch" >> "$GNUPGHOME"/gpg.conf

            echo "$GPG_KEY" \
                 | base64 --decode --ignore-garbage \
                 | gpg --batch --allow-secret-key-import --import

                 gpg --keyid-format LONG --list-secret-keys

      - run:
          name: Deploy
          command: |
            GPG_TTY=$(tty)
            export GPG_TTY
            echo $GPG_TTY
            ./circle-maybe-deploy.bb lein deploy clojars
      - run:
          name: GitHub Release
          command: |
            ./circle-maybe-deploy.bb bb -ci-github-release
